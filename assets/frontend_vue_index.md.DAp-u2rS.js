import{_ as i}from"./app.BAt_qrEo.js";import{c as a,o as n,a7 as t}from"./chunks/vue.Bn_qOzU9.js";import"./chunks/vendor.j62-d68X.js";const u=JSON.parse('{"title":"Vue.js 深度学习指南","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/vue/index.md","filePath":"frontend/vue/index.md","lastUpdated":1755180371000}'),l={name:"frontend/vue/index.md"};function e(h,s,p,r,k,E){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="vue-js-深度学习指南" tabindex="-1">Vue.js 深度学习指南 <a class="header-anchor" href="#vue-js-深度学习指南" aria-label="Permalink to &quot;Vue.js 深度学习指南&quot;">​</a></h1><p>Vue.js 是一套用于构建用户界面的渐进式框架，以其简洁的API、强大的功能和优秀的开发体验而广受欢迎。本指南深入解析Vue的核心原理和最佳实践。</p><h2 id="🎯-核心架构概览" tabindex="-1">🎯 核心架构概览 <a class="header-anchor" href="#🎯-核心架构概览" aria-label="Permalink to &quot;🎯 核心架构概览&quot;">​</a></h2><div class="language-mermaid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph TB</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A[Vue.js 生态系统] --&gt; B[Vue2 核心]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A --&gt; C[Vue3 核心]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A --&gt; D[状态管理]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A --&gt; E[路由系统]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A --&gt; F[工程化工具]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    B --&gt; B1[响应式系统]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    B --&gt; B2[虚拟DOM]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    B --&gt; B3[组件系统]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    B --&gt; B4[指令系统]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C --&gt; C1[Composition API]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C --&gt; C2[Proxy响应式]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C --&gt; C3[Fragment支持]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C --&gt; C4[Teleport]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    D --&gt; D1[Vuex]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    D --&gt; D2[Pinia]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    E --&gt; E1[Vue Router]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    E --&gt; E2[动态路由]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    E --&gt; E3[导航守卫]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    F --&gt; F1[Vue CLI]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    F --&gt; F2[Vite]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    F --&gt; F3[构建优化]</span></span></code></pre></div><h2 id="📚-深度学习路径" tabindex="-1">📚 深度学习路径 <a class="header-anchor" href="#📚-深度学习路径" aria-label="Permalink to &quot;📚 深度学习路径&quot;">​</a></h2><h3 id="🔥-vue2-核心原理" tabindex="-1">🔥 <a href="./vue2/">Vue2 核心原理</a> <a class="header-anchor" href="#🔥-vue2-核心原理" aria-label="Permalink to &quot;🔥 [Vue2 核心原理](./vue2/)&quot;">​</a></h3><p>深入理解Vue2的核心实现机制：</p><ul><li><strong><a href="./vue2/reactivity.html">响应式系统</a></strong>：Object.defineProperty实现原理</li><li><strong><a href="./vue2/virtual-dom.html">虚拟DOM与Diff算法</a></strong>：高效更新机制</li><li><strong><a href="./vue2/two-way-binding.html">双向绑定机制</a></strong>：v-model实现原理</li><li><strong><a href="./vue2/lifecycle.html">生命周期深度解析</a></strong>：组件生命周期钩子</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Vue2响应式核心</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineReactive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">obj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dep</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Dep</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Object.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defineProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obj, key, {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Dep.target) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        dep.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">depend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 依赖收集</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> val</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">newVal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (newVal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> val) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> newVal</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      dep.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">notify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 派发更新</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="⚡-vue3-现代化特性" tabindex="-1">⚡ <a href="./vue3/">Vue3 现代化特性</a> <a class="header-anchor" href="#⚡-vue3-现代化特性" aria-label="Permalink to &quot;⚡ [Vue3 现代化特性](./vue3/)&quot;">​</a></h3><p>探索Vue3的革命性改进：</p><ul><li><strong><a href="./vue3/reactivity.html">Proxy响应式系统</a></strong>：更强大的数据劫持</li><li><strong><a href="./vue3/composition-api.html">Composition API深度解析</a></strong>：逻辑复用新范式</li><li><strong><a href="./vue3/performance.html">性能优化机制</a></strong>：编译时和运行时优化</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Vue3 Composition API</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> doubled</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> computed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> count.value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> increment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      count.value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    onMounted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;组件已挂载&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      count,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      doubled,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      increment</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="🗂️-状态管理深度解析" tabindex="-1">🗂️ <a href="./state/">状态管理深度解析</a> <a class="header-anchor" href="#🗂️-状态管理深度解析" aria-label="Permalink to &quot;🗂️ [状态管理深度解析](./state/)&quot;">​</a></h3><p>掌握Vue应用的状态管理：</p><ul><li><strong><a href="./state/vuex.html">Vuex深度解析</a></strong>：集中式状态管理</li><li><strong><a href="./state/pinia.html">Pinia现代化方案</a></strong>：Vue3官方推荐</li><li><strong>状态管理模式对比</strong>：选择最适合的方案</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Pinia Store</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> useUserStore</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> user</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> isLoggedIn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> computed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">user.value)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> login</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">credentials</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">login</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(credentials)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    user.value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> response.data.user</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { user, isLoggedIn, login }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="🛣️-vue-router路由系统" tabindex="-1">🛣️ <a href="./router/">Vue Router路由系统</a> <a class="header-anchor" href="#🛣️-vue-router路由系统" aria-label="Permalink to &quot;🛣️ [Vue Router路由系统](./router/)&quot;">​</a></h3><p>构建单页面应用的路由解决方案：</p><ul><li><strong><a href="./router/core.html">核心原理深度解析</a></strong>：路由匹配与导航机制</li><li><strong><a href="./router/guards.html">导航守卫与权限控制</a></strong>：路由级权限管理</li><li><strong><a href="./router/dynamic.html">动态路由实现</a></strong>：灵活的路由配置</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 路由守卫权限控制</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">router.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">beforeEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (to.meta.requiresAuth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isAuthenticated</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;/login&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (to.meta.roles </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasAnyRole</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(to.meta.roles)) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;/forbidden&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="🚀-性能优化与工程化" tabindex="-1">🚀 <a href="./optimization/">性能优化与工程化</a> <a class="header-anchor" href="#🚀-性能优化与工程化" aria-label="Permalink to &quot;🚀 [性能优化与工程化](./optimization/)&quot;">​</a></h3><p>打造高性能的Vue应用：</p><ul><li><strong><a href="./optimization/build.html">构建优化深度解析</a></strong>：Webpack/Vite优化策略</li><li><strong><a href="./optimization/ssr.html">SSR服务端渲染</a></strong>：首屏性能与SEO优化</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 构建优化配置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  build: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rollupOptions: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      output: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        manualChunks: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          vue: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;vue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;vue-router&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          vendor: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;lodash-es&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;axios&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="🎨-核心特性对比" tabindex="-1">🎨 核心特性对比 <a class="header-anchor" href="#🎨-核心特性对比" aria-label="Permalink to &quot;🎨 核心特性对比&quot;">​</a></h2><h3 id="vue2-vs-vue3-关键差异" tabindex="-1">Vue2 vs Vue3 关键差异 <a class="header-anchor" href="#vue2-vs-vue3-关键差异" aria-label="Permalink to &quot;Vue2 vs Vue3 关键差异&quot;">​</a></h3><table tabindex="0"><thead><tr><th>特性</th><th>Vue2</th><th>Vue3</th></tr></thead><tbody><tr><td><strong>响应式实现</strong></td><td>Object.defineProperty</td><td>Proxy</td></tr><tr><td><strong>API风格</strong></td><td>Options API</td><td>Composition API</td></tr><tr><td><strong>TypeScript支持</strong></td><td>需要额外配置</td><td>原生支持</td></tr><tr><td><strong>包体积</strong></td><td>~34KB</td><td>~10KB (tree-shakable)</td></tr><tr><td><strong>性能</strong></td><td>基准性能</td><td>快20%-40%</td></tr><tr><td><strong>IE支持</strong></td><td>支持IE9+</td><td>不支持IE</td></tr></tbody></table><h3 id="状态管理方案对比" tabindex="-1">状态管理方案对比 <a class="header-anchor" href="#状态管理方案对比" aria-label="Permalink to &quot;状态管理方案对比&quot;">​</a></h3><table tabindex="0"><thead><tr><th>特性</th><th>Vuex</th><th>Pinia</th></tr></thead><tbody><tr><td><strong>API设计</strong></td><td>Options风格</td><td>Composition风格</td></tr><tr><td><strong>TypeScript</strong></td><td>需要复杂类型声明</td><td>原生支持</td></tr><tr><td><strong>DevTools</strong></td><td>完整支持</td><td>更好的集成</td></tr><tr><td><strong>包大小</strong></td><td>~2.6KB</td><td>~1.3KB</td></tr><tr><td><strong>学习曲线</strong></td><td>相对陡峭</td><td>更加直观</td></tr></tbody></table><h2 id="🛠️-开发工具生态" tabindex="-1">🛠️ 开发工具生态 <a class="header-anchor" href="#🛠️-开发工具生态" aria-label="Permalink to &quot;🛠️ 开发工具生态&quot;">​</a></h2><h3 id="构建工具" tabindex="-1">构建工具 <a class="header-anchor" href="#构建工具" aria-label="Permalink to &quot;构建工具&quot;">​</a></h3><ul><li><strong><a href="https://cli.vuejs.org/" target="_blank" rel="noreferrer">Vue CLI</a></strong>：Vue2项目脚手架</li><li><strong><a href="https://vitejs.dev/" target="_blank" rel="noreferrer">Vite</a></strong>：Vue3推荐构建工具</li><li><strong><a href="https://nuxtjs.org/" target="_blank" rel="noreferrer">Nuxt.js</a></strong>：Vue全栈框架</li></ul><h3 id="开发工具" tabindex="-1">开发工具 <a class="header-anchor" href="#开发工具" aria-label="Permalink to &quot;开发工具&quot;">​</a></h3><ul><li><strong><a href="https://devtools.vuejs.org/" target="_blank" rel="noreferrer">Vue DevTools</a></strong>：官方调试工具</li><li><strong><a href="https://marketplace.visualstudio.com/items?itemName=Vue.volar" target="_blank" rel="noreferrer">Volar</a></strong>：VS Code语言支持</li><li><strong><a href="https://marketplace.visualstudio.com/items?itemName=Vue.vscode-typescript-vue-plugin" target="_blank" rel="noreferrer">Vue Language Features</a></strong>：TypeScript支持</li></ul><h3 id="ui组件库" tabindex="-1">UI组件库 <a class="header-anchor" href="#ui组件库" aria-label="Permalink to &quot;UI组件库&quot;">​</a></h3><ul><li><strong><a href="https://element-plus.org/" target="_blank" rel="noreferrer">Element Plus</a></strong>：Vue3企业级组件库</li><li><strong><a href="https://antdv.com/" target="_blank" rel="noreferrer">Ant Design Vue</a></strong>：企业级UI设计语言</li><li><strong><a href="https://vuetifyjs.com/" target="_blank" rel="noreferrer">Vuetify</a></strong>：Material Design组件库</li></ul><h2 id="🎯-学习建议" tabindex="-1">🎯 学习建议 <a class="header-anchor" href="#🎯-学习建议" aria-label="Permalink to &quot;🎯 学习建议&quot;">​</a></h2><h3 id="初学者路径" tabindex="-1">初学者路径 <a class="header-anchor" href="#初学者路径" aria-label="Permalink to &quot;初学者路径&quot;">​</a></h3><ol><li><strong>Vue基础概念</strong> → 理解响应式、组件、指令</li><li><strong>项目实践</strong> → 构建简单的Todo应用</li><li><strong>生态系统</strong> → 学习Vue Router和状态管理</li><li><strong>工程化实践</strong> → 掌握构建工具和最佳实践</li></ol><h3 id="进阶开发者" tabindex="-1">进阶开发者 <a class="header-anchor" href="#进阶开发者" aria-label="Permalink to &quot;进阶开发者&quot;">​</a></h3><ol><li><strong>源码阅读</strong> → 深入理解Vue内部机制</li><li><strong>性能优化</strong> → 掌握各种优化技巧</li><li><strong>架构设计</strong> → 大型应用架构实践</li><li><strong>生态贡献</strong> → 参与开源项目</li></ol><h3 id="企业级应用" tabindex="-1">企业级应用 <a class="header-anchor" href="#企业级应用" aria-label="Permalink to &quot;企业级应用&quot;">​</a></h3><ol><li><strong>技术选型</strong> → Vue2/Vue3选择策略</li><li><strong>架构设计</strong> → 微前端、SSR等方案</li><li><strong>团队协作</strong> → 代码规范、工程化流程</li><li><strong>性能监控</strong> → 应用性能监控与优化</li></ol><h2 id="�-推荐学习资源" tabindex="-1">� 推荐学习资源 <a class="header-anchor" href="#�-推荐学习资源" aria-label="Permalink to &quot;� 推荐学习资源&quot;">​</a></h2><h3 id="官方资源" tabindex="-1">官方资源 <a class="header-anchor" href="#官方资源" aria-label="Permalink to &quot;官方资源&quot;">​</a></h3><ul><li><a href="https://vuejs.org/" target="_blank" rel="noreferrer">Vue.js 官方文档</a></li><li><a href="https://vuejs.org/tutorial/" target="_blank" rel="noreferrer">Vue.js 官方教程</a></li><li><a href="https://github.com/vuejs/vue-next/tree/master/packages/vue/examples" target="_blank" rel="noreferrer">Vue.js 官方示例</a></li></ul><h3 id="社区资源" tabindex="-1">社区资源 <a class="header-anchor" href="#社区资源" aria-label="Permalink to &quot;社区资源&quot;">​</a></h3><ul><li><a href="https://www.vuemastery.com/" target="_blank" rel="noreferrer">Vue Mastery</a>：高质量Vue课程</li><li><a href="https://vueschool.io/" target="_blank" rel="noreferrer">Vue School</a>：Vue学习平台</li><li><a href="https://vue-js.com/" target="_blank" rel="noreferrer">Vue.js 中文社区</a>：中文学习资源</li></ul><h3 id="实践项目" tabindex="-1">实践项目 <a class="header-anchor" href="#实践项目" aria-label="Permalink to &quot;实践项目&quot;">​</a></h3><ul><li><a href="https://github.com/vuejs/vue-hackernews-2.0" target="_blank" rel="noreferrer">Vue HackerNews Clone</a></li><li><a href="https://github.com/vuejs/vue-todomvc" target="_blank" rel="noreferrer">Vue TodoMVC</a></li><li><a href="https://github.com/PanJiaChen/vue-admin-template" target="_blank" rel="noreferrer">Vue Admin Template</a></li></ul><hr><p>🚀 <strong>开始你的Vue.js深度学习之旅！</strong> 从核心原理到工程实践，从Vue2到Vue3，全面掌握现代前端开发技能。</p>`,53)]))}const c=i(l,[["render",e]]);export{u as __pageData,c as default};
